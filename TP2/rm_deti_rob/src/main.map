Archive member included because of file (symbol)

/opt/pic32mx/lib/libdetpic32.a(xprintf.o)
                              main.o (xprintf)
/opt/pic32mx/lib/libm.a(cos32.o)
                              rm-mr32.o (cos)
/opt/pic32mx/lib/libm.a(sin32.o)
                              rm-mr32.o (sin)
/opt/pic32mx/lib/libm.a(reduct32.o)
                              /opt/pic32mx/lib/libm.a(cos32.o) (reduct)
/opt/pic32mx/lib/libm.a(sincos32.o)
                              /opt/pic32mx/lib/libm.a(cos32.o) (sincon)
/opt/pic32mx/lib/libm.a(func32.o)
                              /opt/pic32mx/lib/libm.a(cos32.o) (sigmax)
/opt/pic32mx/lib/libm.a(dp32.o)
                              main.o (__subdf3)
/opt/pic32mx/lib/libc.a(exit.o)
                              rm-mr32.o (exit)
/opt/pic32mx/lib/libc.a(stdclean.o)
                              /opt/pic32mx/lib/libc.a(exit.o) (_cleanup)
/opt/pic32mx/lib/libc.a(_exit.o)
                              /opt/pic32mx/lib/libc.a(exit.o) (_exit)
/opt/pic32mx/lib/libc.a(_iob.o)
                              /opt/pic32mx/lib/libc.a(stdclean.o) (_iob)
/opt/pic32mx/lib/libc.a(fclose.o)
                              /opt/pic32mx/lib/libc.a(stdclean.o) (fclose)
/opt/pic32mx/lib/libc.a(fflush.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (fflush)
/opt/pic32mx/lib/libc.a(buf.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (_buffree)
/opt/pic32mx/lib/libc.a(errno.o)
                              /opt/pic32mx/lib/libc.a(buf.o) (errno)
/opt/pic32mx/lib/libc.a(tfiles.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (_tfilesptr)
/opt/pic32mx/lib/libc.a(sbrk.o)
                              /opt/pic32mx/lib/libc.a(buf.o) (sbrk)
/opt/pic32mx/lib/libc.a(write.o)
                              /opt/pic32mx/lib/libc.a(fflush.o) (write)
/opt/pic32mx/lib/libc.a(remove.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (remove)
/opt/pic32mx/lib/libc.a(close.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (close)
/opt/pic32mx/lib/libc.a(memset.o)
                              /opt/pic32mx/lib/libc.a(sbrk.o) (memset)
/opt/pic32mx/lib/libc.a(_mon_putc.o)
                              /opt/pic32mx/lib/libc.a(write.o) (_mon_putc)
/opt/pic32mx/lib/libc.a(c32_uart.o)
                              /opt/pic32mx/lib/libc.a(_mon_putc.o) (__C32_UART)

Allocating common symbols
Common symbol       size              file

path                0x800             main.o
_atexitptr          0x4               /opt/pic32mx/lib/libc.a(stdclean.o)
errno               0x4               /opt/pic32mx/lib/libc.a(errno.o)
tick80ms            0x4               rm-mr32.o
_sibuf              0x20              /opt/pic32mx/lib/libc.a(_iob.o)
tick20ms            0x4               rm-mr32.o
_outdone            0x1               /opt/pic32mx/lib/libc.a(_iob.o)
tick40ms            0x4               rm-mr32.o
tick160ms           0x4               rm-mr32.o
_tfilesptr          0x4               /opt/pic32mx/lib/libc.a(tfiles.o)
analogSensors       0x18              rm-mr32.o
tick10ms            0x4               rm-mr32.o
_sobuf              0x20              /opt/pic32mx/lib/libc.a(_iob.o)

Microchip PIC32 Memory-Usage Report

kseg0 Program-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.text                   0x9d001400         0x5028       20520  Application's executable code 
.rodata                 0x9d006428          0x20c         524  Read-only constant data 
.data                   0x9d006634          0x198         408  Data-initialization template 
.sdata                  0x9d0067cc           0x10          16  Small data-initialization template 
      Total kseg0_program_mem used  :      0x53dc       21468  4.1% of 0x7ec00

kseg0 Boot-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.startup                0x9d001000          0x2b0         688  C startup code 
         Total kseg0_boot_mem used  :       0x2b0         688  68.3% of 0x3f0

Exception-Memory Usage 
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.app_excpt              0x9d000180           0x14          20  General-Exception handler 
.vector_7               0x9d0002e0            0x8           8  Interrupt Vector 7 
.vector_8               0x9d000300            0x8           8  Interrupt Vector 8 
.vector_19              0x9d000460            0x8           8  Interrupt Vector 19 
          Total exception_mem used  :        0x2c          44  1.1% of 0x1000

kseg1 Boot-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
         Total kseg1_boot_mem used  :           0           0  <1% of 0x490
        --------------------------------------------------------------------------
         Total Program Memory used  :      0x56b8       22200  4.2% of 0x80480
        --------------------------------------------------------------------------


kseg1 Data-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.data                   0xa0000000          0x198         408  Initialized data 
.sdata                  0xa0000198           0x10          16  Small initialized data 
.sbss                   0xa00001a8           0xc4         196  Small uninitialized data 
.bss                    0xa000026c          0xac4        2756  Uninitialized data 
.stack                  0xa0000d30         0x2000        8192  Minimum space reserved for stack 
         Total kseg1_data_mem used  :      0x2d30       11568  8.8% of 0x20000
        --------------------------------------------------------------------------
            Total Data Memory used  :      0x2d30       11568  8.8% of 0x20000
        --------------------------------------------------------------------------

Memory Configuration

Name             Origin             Length             Attributes
kseg0_program_mem 0x000000009d001400 0x000000000007ec00 xr
kseg0_boot_mem   0x000000009d001000 0x00000000000003f0
exception_mem    0x000000009d000000 0x0000000000001000
kseg1_boot_mem   0x00000000bfc00000 0x0000000000000490
debug_exec_mem   0x00000000bfc02000 0x0000000000000ff0
config3          0x00000000bfc02ff0 0x0000000000000004
config2          0x00000000bfc02ff4 0x0000000000000004
config1          0x00000000bfc02ff8 0x0000000000000004
config0          0x00000000bfc02ffc 0x0000000000000004
kseg1_data_mem   0x00000000a0000000 0x0000000000020000 w !x
sfrs             0x00000000bf800000 0x0000000000100000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD main.o
LOAD rm-mr32.o
LOAD /opt/pic32mx/lib/libdetpic32.a
LOAD /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a
LOAD /opt/pic32mx/lib/libm.a
LOAD /opt/pic32mx/lib/libc.a
LOAD /opt/pic32mx/lib/libsupc++.a
LOAD /opt/pic32mx/lib/libxcpp.a
                0x0000000000000400                PROVIDE (_min_stack_size, 0x400)
                0x0000000000000000                PROVIDE (_min_heap_size, 0x0)
LOAD /opt/pic32mx/lib/startup.o
                0x0000000000000001                PROVIDE (_vector_spacing, 0x1)
                0x000000009d000000                _ebase_address = 0x9d000000
                0x0000000000000001                _vector_spacing = 0x1
                0x000000009d001800                _reset = 0x9d001800
                0x0000000000002000                _min_stack_size = 0x2000
                0x0000000000000000                _min_heap_size = 0x0
                0x00000000bfc00000                _RESET_ADDR = 0xbfc00000
                0x00000000bfc00380                _BEV_EXCPT_ADDR = 0xbfc00380
                0x00000000bfc00480                _DBG_EXCPT_ADDR = 0xbfc00480
                0x00000000bfc02000                _DBG_CODE_ADDR = 0xbfc02000
                0x000000009d000180                _GEN_EXCPT_ADDR = (_ebase_address + 0x180)

.config_BFC02FF0
 *(.config_BFC02FF0)

.config_BFC02FF4
 *(.config_BFC02FF4)

.config_BFC02FF8
 *(.config_BFC02FF8)

.config_BFC02FFC
 *(.config_BFC02FFC)

.startup        0x000000009d001000      0x2b0
 *(.startup)
 .startup       0x000000009d001000      0x2b0 /opt/pic32mx/lib/startup.o
                0x000000009d001000                startup
 *(.startup)

.reset
 *(.reset)

.bev_excpt
 *(.bev_handler)

.dbg_excpt      0x00000000bfc00480        0x0
                0x00000000bfc00480                . = (. + DEFINED (_DEBUGGER)?0x8:0x0)

.dbg_code       0x00000000bfc02000        0x0
                0x00000000bfc02000                . = (. + DEFINED (_DEBUGGER)?0xff0:0x0)

.app_excpt      0x000000009d000180       0x14
 *(.gen_handler)
 .gen_handler   0x000000009d000180       0x14 /opt/pic32mx/lib/startup.o

.vector_0       0x000000009d000200        0x0
 *(.vector_0)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_0) <= (_vector_spacing << 0x5))), function at exception vector 0 too large)

.vector_1       0x000000009d000220        0x0
 *(.vector_1)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_1) <= (_vector_spacing << 0x5))), function at exception vector 1 too large)

.vector_2       0x000000009d000240        0x0
 *(.vector_2)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_2) <= (_vector_spacing << 0x5))), function at exception vector 2 too large)

.vector_3       0x000000009d000260        0x0
 *(.vector_3)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_3) <= (_vector_spacing << 0x5))), function at exception vector 3 too large)

.vector_4       0x000000009d000280        0x0
 *(.vector_4)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_4) <= (_vector_spacing << 0x5))), function at exception vector 4 too large)

.vector_5       0x000000009d0002a0        0x0
 *(.vector_5)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_5) <= (_vector_spacing << 0x5))), function at exception vector 5 too large)

.vector_6       0x000000009d0002c0        0x0
 *(.vector_6)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_6) <= (_vector_spacing << 0x5))), function at exception vector 6 too large)

.vector_7       0x000000009d0002e0        0x8
 *(.vector_7)
 .vector_7      0x000000009d0002e0        0x8 rm-mr32.o
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_7) <= (_vector_spacing << 0x5))), function at exception vector 7 too large)

.vector_8       0x000000009d000300        0x8
 *(.vector_8)
 .vector_8      0x000000009d000300        0x8 rm-mr32.o
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_8) <= (_vector_spacing << 0x5))), function at exception vector 8 too large)

.vector_9       0x000000009d000320        0x0
 *(.vector_9)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_9) <= (_vector_spacing << 0x5))), function at exception vector 9 too large)

.vector_10      0x000000009d000340        0x0
 *(.vector_10)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_10) <= (_vector_spacing << 0x5))), function at exception vector 10 too large)

.vector_11      0x000000009d000360        0x0
 *(.vector_11)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_11) <= (_vector_spacing << 0x5))), function at exception vector 11 too large)

.vector_12      0x000000009d000380        0x0
 *(.vector_12)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_12) <= (_vector_spacing << 0x5))), function at exception vector 12 too large)

.vector_13      0x000000009d0003a0        0x0
 *(.vector_13)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_13) <= (_vector_spacing << 0x5))), function at exception vector 13 too large)

.vector_14      0x000000009d0003c0        0x0
 *(.vector_14)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_14) <= (_vector_spacing << 0x5))), function at exception vector 14 too large)

.vector_15      0x000000009d0003e0        0x0
 *(.vector_15)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_15) <= (_vector_spacing << 0x5))), function at exception vector 15 too large)

.vector_16      0x000000009d000400        0x0
 *(.vector_16)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_16) <= (_vector_spacing << 0x5))), function at exception vector 16 too large)

.vector_17      0x000000009d000420        0x0
 *(.vector_17)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_17) <= (_vector_spacing << 0x5))), function at exception vector 17 too large)

.vector_18      0x000000009d000440        0x0
 *(.vector_18)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_18) <= (_vector_spacing << 0x5))), function at exception vector 18 too large)

.vector_19      0x000000009d000460        0x8
 *(.vector_19)
 .vector_19     0x000000009d000460        0x8 rm-mr32.o
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_19) <= (_vector_spacing << 0x5))), function at exception vector 19 too large)

.vector_20      0x000000009d000480        0x0
 *(.vector_20)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_20) <= (_vector_spacing << 0x5))), function at exception vector 20 too large)

.vector_21      0x000000009d0004a0        0x0
 *(.vector_21)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_21) <= (_vector_spacing << 0x5))), function at exception vector 21 too large)

.vector_22      0x000000009d0004c0        0x0
 *(.vector_22)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_22) <= (_vector_spacing << 0x5))), function at exception vector 22 too large)

.vector_23      0x000000009d0004e0        0x0
 *(.vector_23)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_23) <= (_vector_spacing << 0x5))), function at exception vector 23 too large)

.vector_24      0x000000009d000500        0x0
 *(.vector_24)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_24) <= (_vector_spacing << 0x5))), function at exception vector 24 too large)

.vector_25      0x000000009d000520        0x0
 *(.vector_25)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_25) <= (_vector_spacing << 0x5))), function at exception vector 25 too large)

.vector_26      0x000000009d000540        0x0
 *(.vector_26)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_26) <= (_vector_spacing << 0x5))), function at exception vector 26 too large)

.vector_27      0x000000009d000560        0x0
 *(.vector_27)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_27) <= (_vector_spacing << 0x5))), function at exception vector 27 too large)

.vector_28      0x000000009d000580        0x0
 *(.vector_28)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_28) <= (_vector_spacing << 0x5))), function at exception vector 28 too large)

.vector_29      0x000000009d0005a0        0x0
 *(.vector_29)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_29) <= (_vector_spacing << 0x5))), function at exception vector 29 too large)

.vector_30      0x000000009d0005c0        0x0
 *(.vector_30)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_30) <= (_vector_spacing << 0x5))), function at exception vector 30 too large)

.vector_31      0x000000009d0005e0        0x0
 *(.vector_31)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_31) <= (_vector_spacing << 0x5))), function at exception vector 31 too large)

.vector_32      0x000000009d000600        0x0
 *(.vector_32)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_32) <= (_vector_spacing << 0x5))), function at exception vector 32 too large)

.vector_33      0x000000009d000620        0x0
 *(.vector_33)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_33) <= (_vector_spacing << 0x5))), function at exception vector 33 too large)

.vector_34      0x000000009d000640        0x0
 *(.vector_34)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_34) <= (_vector_spacing << 0x5))), function at exception vector 34 too large)

.vector_35      0x000000009d000660        0x0
 *(.vector_35)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_35) <= (_vector_spacing << 0x5))), function at exception vector 35 too large)

.vector_36      0x000000009d000680        0x0
 *(.vector_36)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_36) <= (_vector_spacing << 0x5))), function at exception vector 36 too large)

.vector_37      0x000000009d0006a0        0x0
 *(.vector_37)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_37) <= (_vector_spacing << 0x5))), function at exception vector 37 too large)

.vector_38      0x000000009d0006c0        0x0
 *(.vector_38)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_38) <= (_vector_spacing << 0x5))), function at exception vector 38 too large)

.vector_39      0x000000009d0006e0        0x0
 *(.vector_39)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_39) <= (_vector_spacing << 0x5))), function at exception vector 39 too large)

.vector_40      0x000000009d000700        0x0
 *(.vector_40)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_40) <= (_vector_spacing << 0x5))), function at exception vector 40 too large)

.vector_41      0x000000009d000720        0x0
 *(.vector_41)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_41) <= (_vector_spacing << 0x5))), function at exception vector 41 too large)

.vector_42      0x000000009d000740        0x0
 *(.vector_42)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_42) <= (_vector_spacing << 0x5))), function at exception vector 42 too large)

.vector_43      0x000000009d000760        0x0
 *(.vector_43)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_43) <= (_vector_spacing << 0x5))), function at exception vector 43 too large)

.vector_44      0x000000009d000780        0x0
 *(.vector_44)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_44) <= (_vector_spacing << 0x5))), function at exception vector 44 too large)

.vector_45      0x000000009d0007a0        0x0
 *(.vector_45)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_45) <= (_vector_spacing << 0x5))), function at exception vector 45 too large)

.vector_46      0x000000009d0007c0        0x0
 *(.vector_46)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_46) <= (_vector_spacing << 0x5))), function at exception vector 46 too large)

.vector_47      0x000000009d0007e0        0x0
 *(.vector_47)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_47) <= (_vector_spacing << 0x5))), function at exception vector 47 too large)

.vector_48      0x000000009d000800        0x0
 *(.vector_48)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_48) <= (_vector_spacing << 0x5))), function at exception vector 48 too large)

.vector_49      0x000000009d000820        0x0
 *(.vector_49)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_49) <= (_vector_spacing << 0x5))), function at exception vector 49 too large)

.vector_50      0x000000009d000840        0x0
 *(.vector_50)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_50) <= (_vector_spacing << 0x5))), function at exception vector 50 too large)

.vector_51      0x000000009d000860        0x0
 *(.vector_51)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_51) <= (_vector_spacing << 0x5))), function at exception vector 51 too large)

.vector_52      0x000000009d000880        0x0
 *(.vector_52)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_52) <= (_vector_spacing << 0x5))), function at exception vector 52 too large)

.vector_53      0x000000009d0008a0        0x0
 *(.vector_53)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_53) <= (_vector_spacing << 0x5))), function at exception vector 53 too large)

.vector_54      0x000000009d0008c0        0x0
 *(.vector_54)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_54) <= (_vector_spacing << 0x5))), function at exception vector 54 too large)

.vector_55      0x000000009d0008e0        0x0
 *(.vector_55)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_55) <= (_vector_spacing << 0x5))), function at exception vector 55 too large)

.vector_56      0x000000009d000900        0x0
 *(.vector_56)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_56) <= (_vector_spacing << 0x5))), function at exception vector 56 too large)

.vector_57      0x000000009d000920        0x0
 *(.vector_57)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_57) <= (_vector_spacing << 0x5))), function at exception vector 57 too large)

.vector_58      0x000000009d000940        0x0
 *(.vector_58)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_58) <= (_vector_spacing << 0x5))), function at exception vector 58 too large)

.vector_59      0x000000009d000960        0x0
 *(.vector_59)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_59) <= (_vector_spacing << 0x5))), function at exception vector 59 too large)

.vector_60      0x000000009d000980        0x0
 *(.vector_60)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_60) <= (_vector_spacing << 0x5))), function at exception vector 60 too large)

.vector_61      0x000000009d0009a0        0x0
 *(.vector_61)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_61) <= (_vector_spacing << 0x5))), function at exception vector 61 too large)

.vector_62      0x000000009d0009c0        0x0
 *(.vector_62)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_62) <= (_vector_spacing << 0x5))), function at exception vector 62 too large)

.vector_63      0x000000009d0009e0        0x0
 *(.vector_63)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_63) <= (_vector_spacing << 0x5))), function at exception vector 63 too large)

.text           0x000000009d001400     0x5028
                0x000000009d001400                _text_begin = .
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x000000009d001400      0xdbc main.o
                0x000000009d001508                adjustSensors1
                0x000000009d001400                printPathList
                0x000000009d0015a4                adjustSensors2
                0x000000009d001640                rotateRel
                0x000000009d001880                main
                0x000000009d002024                rotateRel_basic
                0x000000009d001474                checkForFinalLine
 .text          0x000000009d0021bc     0x14c0 rm-mr32.o
                0x000000009d002e74                normalizeAngle
                0x000000009d002db8                pid
                0x000000009d0022f8                average
                0x000000009d0034e4                isr_enc_left
                0x000000009d0021bc                setServoPos
                0x000000009d00359c                isr_enc_right
                0x000000009d002500                readAnalogSensors
                0x000000009d002a78                getRobotPos
                0x000000009d002358                updateBatteryVoltage
                0x000000009d00366c                __gxx_personality_v0
                0x000000009d00329c                isr_t2
                0x000000009d002ae0                led
                0x000000009d002b8c                setSP2
                0x000000009d002b3c                leds
                0x000000009d0023fc                sort
                0x000000009d00325c                wait
                0x000000009d002ab4                setRobotPos
                0x000000009d002630                initPIC32
                0x000000009d002448                median
                0x000000009d002260                calcDistance
                0x000000009d002c14                readEncoders
                0x000000009d003148                delay
                0x000000009d002bdc                setVel2
                0x000000009d002b80                batteryVoltage
                0x000000009d002bc8                setPWM2
                0x000000009d002f5c                updateLocalization
                0x000000009d002c40                actuateMotors
                0x000000009d003194                readLineSensors
                0x000000009d002c0c                closedLoopControl
                0x000000009d002b5c                obstacleSensor
 .text          0x000000009d00367c      0x990 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
                0x000000009d003684                xprintf
 .text          0x000000009d00400c      0x1a0 /opt/pic32mx/lib/libm.a(cos32.o)
                0x000000009d00400c                cos
                0x000000009d00400c                dpcos
 .text          0x000000009d0041ac      0x198 /opt/pic32mx/lib/libm.a(sin32.o)
                0x000000009d0041ac                dpsin
                0x000000009d0041ac                sin
 .text          0x000000009d004344      0x1b4 /opt/pic32mx/lib/libm.a(reduct32.o)
                0x000000009d004344                reduct
 .text          0x000000009d0044f8      0x5d4 /opt/pic32mx/lib/libm.a(func32.o)
                0x000000009d0046cc                exadd
                0x000000009d004600                exmul
                0x000000009d0044f8                sigmax
                0x000000009d004868                exdiv
                0x000000009d0047b8                exsub
 .text          0x000000009d004acc     0x1128 /opt/pic32mx/lib/libm.a(dp32.o)
                0x000000009d005b7c                fabs
                0x000000009d005a40                __eqdf2
                0x000000009d005a40                __gtdf2
                0x000000009d004acc                dpsub
                0x000000009d0056d4                __floatsidf
                0x000000009d005a40                __ltdf2
                0x000000009d005748                ultodp
                0x000000009d004ef8                dpmul
                0x000000009d00583c                dptofp
                0x000000009d0059bc                __fixunsdfsi
                0x000000009d005a40                dpcmp
                0x000000009d005798                __extendsfdf2
                0x000000009d004ad4                __adddf3
                0x000000009d0059bc                dptoul
                0x000000009d005220                dpdiv
                0x000000009d0056d4                litodp
                0x000000009d005934                __fixdfsi
                0x000000009d005a40                __ledf2
                0x000000009d005798                fptodp
                0x000000009d005b64                __negdf2
                0x000000009d004ad4                dpadd
                0x000000009d005220                __divdf3
                0x000000009d004ef8                __muldf3
                0x000000009d00583c                __truncdfsf2
                0x000000009d005a40                __nedf2
                0x000000009d005934                dptoli
                0x000000009d005b98                nan
                0x000000009d005b7c                dpfabs
                0x000000009d005a40                __gedf2
                0x000000009d005b98                dpnan
                0x000000009d004acc                __subdf3
 .text.exit     0x000000009d005bf4       0x1c /opt/pic32mx/lib/libc.a(exit.o)
                0x000000009d005bf4                exit
 .text._cleanup
                0x000000009d005c10       0x60 /opt/pic32mx/lib/libc.a(stdclean.o)
                0x000000009d005c10                _cleanup
 .text._exit    0x000000009d005c70        0x8 /opt/pic32mx/lib/libc.a(_exit.o)
                0x000000009d005c70                _exit
 .text.fclose   0x000000009d005c78      0x114 /opt/pic32mx/lib/libc.a(fclose.o)
                0x000000009d005c78                fclose
 .text.fflush   0x000000009d005d8c       0xc4 /opt/pic32mx/lib/libc.a(fflush.o)
                0x000000009d005d8c                fflush
 .text._bufallo
                0x000000009d005e50       0x58 /opt/pic32mx/lib/libc.a(buf.o)
                0x000000009d005e50                _bufallo
 .text._buffree
                0x000000009d005ea8       0x10 /opt/pic32mx/lib/libc.a(buf.o)
                0x000000009d005ea8                _buffree
 .text.getpagesize
                0x000000009d005eb8        0x8 /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d005eb8                getpagesize
 .text._stub_sbd_memlayout
                0x000000009d005ec0       0x2c /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d005ec0                _stub_sbd_memlayout
                0x000000009d005ec0                _sbd_memlayout
 .text._sbrk_init
                0x000000009d005eec      0x158 /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d005eec                _sbrk_init
 .text._sbrk    0x000000009d006044       0xbc /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d006044                _sbrk
 .text.sbrk     0x000000009d006100       0x74 /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d006100                sbrk
 .text.write    0x000000009d006174       0xa8 /opt/pic32mx/lib/libc.a(write.o)
                0x000000009d006174                write
 .text.remove   0x000000009d00621c        0x8 /opt/pic32mx/lib/libc.a(remove.o)
                0x000000009d00621c                remove
 .text.close    0x000000009d006224        0x8 /opt/pic32mx/lib/libc.a(close.o)
                0x000000009d006224                close
 .text          0x000000009d00622c       0xa8 /opt/pic32mx/lib/libc.a(memset.o)
                0x000000009d00622c                memset
 .text._mon_putc
                0x000000009d0062d4       0xa4 /opt/pic32mx/lib/libc.a(_mon_putc.o)
                0x000000009d0062d4                _mon_putc
 .text          0x000000009d006378       0xb0 /opt/pic32mx/lib/startup.o
                0x000000009d0063e8                printStr
                0x000000009d0063c8                printInt
                0x000000009d0063a8                readInt
                0x000000009d006420                resetCoreTimer
                0x000000009d006398                putChar
                0x000000009d0063f8                readStr
                0x000000009d006408                exxt
                0x000000009d0063d8                printInt10
                0x000000009d006378                inkey
                0x000000009d006388                getChar
                0x000000009d0063b8                readInt10
                0x000000009d006418                readCoreTimer
 *(.text.*personality*)
 *(.gnu.warning)
 *(.mips16.fn.*)
 *(.mips16.call.*)
                0x000000009d006428                _text_end = .

.rodata         0x000000009d006428      0x20c
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.str1.4
                0x000000009d006428       0xa7 main.o
                                         0xa8 (size before relaxing)
 *fill*         0x000000009d0064cf        0x1 00
 .rodata.cst8   0x000000009d0064d0       0x40 main.o
                                         0x48 (size before relaxing)
 .rodata.cst4   0x000000009d006510        0xc main.o
 .rodata        0x000000009d00651c       0x10 rm-mr32.o
                0x000000009d006520                KI_num
                0x000000009d006528                KP_num
                0x000000009d00651c                KI_den
                0x000000009d006524                KP_den
 *fill*         0x000000009d00652c        0x4 00
 .rodata.cst8   0x000000009d006530       0x38 rm-mr32.o
 .rodata.str1.4
                0x000000009d006568       0x11 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
                                         0x14 (size before relaxing)
 *fill*         0x000000009d006579        0x7 00
 .rodata.cst8   0x000000009d006580       0x18 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
                                         0x20 (size before relaxing)
 .rodata        0x000000009d006598       0x84 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
 .rodata        0x000000009d00661c       0x15 /opt/pic32mx/lib/startup.o
 *(.rodata1)
                0x000000009d006634                . = ALIGN (0x4)
 *fill*         0x000000009d006631        0x3 00

.sdata2         0x000000009d006634        0x0
 *(.sdata2 .sdata2.* .gnu.linkonce.s2.*)
                0x000000009d006634                . = ALIGN (0x4)

.sbss2          0x000000009d006634        0x0
 *(.sbss2 .sbss2.* .gnu.linkonce.sb2.*)
                0x000000009d006634                . = ALIGN (0x4)

.eh_frame_hdr
 *(.eh_frame_hdr)

.eh_frame
 *(.eh_frame)

.dbg_data       0x00000000a0000000        0x0
                0x00000000a0000000                . = (. + DEFINED (_DEBUGGER)?0x200:0x0)

.data           0x00000000a0000000      0x198 load address 0x000000009d006634
                0x00000000a0000000                _data_begin = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000a0000000       0x88 rm-mr32.o
 .data          0x00000000a0000088       0x70 /opt/pic32mx/lib/libm.a(sincos32.o)
                0x00000000a0000088                sincon
                0x00000000a00000c0                coscon
 .data          0x00000000a00000f8       0xa0 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a00000f8                _iob
 *(.gnu.linkonce.d.*personality*)
 *(.data1)
                0x000000009d006634                _data_image_begin = LOADADDR (.data)

.eh_frame
 *(.eh_frame)
                0x00000000a0008190                _gp = (ALIGN (0x10) + 0x7ff0)

.got
 *(.got.plt)
 *(.got)

.sdata          0x00000000a0000198       0x10 load address 0x000000009d0067cc
                0x00000000a0000198                _sdata_begin = .
 *(.sdata .sdata.* .gnu.linkonce.s.*)
 .sdata         0x00000000a0000198        0x8 rm-mr32.o
                0x00000000a0000198                SERVO_WIDTH_MAX
                0x00000000a000019c                SERVO_WIDTH_MIN
 .sdata         0x00000000a00001a0        0x4 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a00001a0                _Files
 .sdata         0x00000000a00001a4        0x4 /opt/pic32mx/lib/libc.a(c32_uart.o)
                0x00000000a00001a4                __C32_UART
                0x00000000a00001a8                _sdata_end = .

.lit8
 *(.lit8)

.lit4
 *(.lit4)
                0x00000000a00001a8                . = ALIGN (0x4)
                0x00000000a00001a8                _data_end = .
                0x00000000a00001a8                _bss_begin = .

.sbss           0x00000000a00001a8       0xc4
                0x00000000a00001a8                _sbss_begin = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 .sbss          0x00000000a00001a8       0x90 rm-mr32.o
 .sbss          0x00000000a0000238        0x4 /opt/pic32mx/lib/libc.a(buf.o)
 .sbss          0x00000000a000023c        0xc /opt/pic32mx/lib/libc.a(sbrk.o)
                0x00000000a0000240                _minbrk
                0x00000000a000023c                _maxbrk
 *(.scommon)
 .scommon       0x00000000a0000248       0x14 rm-mr32.o
                0x00000000a0000248                tick80ms
                0x00000000a000024c                tick20ms
                0x00000000a0000250                tick40ms
                0x00000000a0000254                tick160ms
                0x00000000a0000258                tick10ms
 .scommon       0x00000000a000025c        0x4 /opt/pic32mx/lib/libc.a(stdclean.o)
                0x00000000a000025c                _atexitptr
 .scommon       0x00000000a0000260        0x1 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a0000260                _outdone
 *fill*         0x00000000a0000261        0x3 00
 .scommon       0x00000000a0000264        0x4 /opt/pic32mx/lib/libc.a(errno.o)
                0x00000000a0000264                errno
 .scommon       0x00000000a0000268        0x4 /opt/pic32mx/lib/libc.a(tfiles.o)
                0x00000000a0000268                _tfilesptr
                0x00000000a000026c                _sbss_end = .

.bss            0x00000000a000026c      0xac4
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000a000026c      0x254 rm-mr32.o
 .bss           0x00000000a00004c0       0x18 /opt/pic32mx/lib/libc.a(sbrk.o)
 *(COMMON)
 COMMON         0x00000000a00004d8      0x800 main.o
                0x00000000a00004d8                path
 COMMON         0x00000000a0000cd8       0x18 rm-mr32.o
                0x00000000a0000cd8                analogSensors
 COMMON         0x00000000a0000cf0       0x40 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a0000cf0                _sibuf
                0x00000000a0000d10                _sobuf
                0x00000000a0000d30                . = ALIGN (0x4)
                0x00000000a0000d30                . = ALIGN (0x4)
                0x00000000a0000d30                _end = .
                0x00000000a0000d30                _bss_end = .

.persist        0x00000000a0000d30        0x0
 *(.persist)
                0x00000000a0000d30                . = ALIGN (0x4)

.heap           0x00000000a0000d30        0x0
                0x00000000a0000d30                _heap = .
                0x00000000a0000d30                . = (. + _min_heap_size)

.stack          0x00000000a0000d30     0x2000
                0x00000000a0000d30                _splim = .
                0x00000000a0000d30                _SPLIM = .
                0x00000000a0002d30                . = (. + _min_stack_size)
 *fill*         0x00000000a0000d30     0x2000 00

.ramfunc        0x00000000a0003000        0x0 load address 0x000000009d0067dc
                0x00000000a0003000                _ramfunc_begin = .
 *(.ramfunc .ramfunc.*)
                0x00000000a0003000                . = ALIGN (0x4)
                0x00000000a0003000                _ramfunc_end = .
                0x000000009d0067dc                _ramfunc_image_begin = LOADADDR (.ramfunc)
                0x0000000000000000                _ramfunc_length = SIZEOF (.ramfunc)
                0x0000000000003000                _bmxdkpba_address = (_ramfunc_begin - 0xa0000000)
                0x0000000000020000                _bmxdudba_address = 0x20000
                0x0000000000020000                _bmxdupba_address = 0x20000
                0x00000000a0020000                _stack = (_ramfunc_length > 0x0)?(_ramfunc_begin - 0x4):0xa0020000
                0x0000000000000001                ASSERT (((_min_stack_size + _min_heap_size) <= (_stack - _heap)), Not enough space to allocate both stack and heap.  Reduce heap and/or stack size.)

.pdr            0x0000000000000000      0x760
 *(.pdr)
 .pdr           0x0000000000000000       0xe0 main.o
 .pdr           0x00000000000000e0      0x420 rm-mr32.o
 .pdr           0x0000000000000500       0x40 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
 .pdr           0x0000000000000540       0x20 /opt/pic32mx/lib/libc.a(exit.o)
 .pdr           0x0000000000000560       0x20 /opt/pic32mx/lib/libc.a(stdclean.o)
 .pdr           0x0000000000000580       0x20 /opt/pic32mx/lib/libc.a(_exit.o)
 .pdr           0x00000000000005a0       0x20 /opt/pic32mx/lib/libc.a(fclose.o)
 .pdr           0x00000000000005c0       0x20 /opt/pic32mx/lib/libc.a(fflush.o)
 .pdr           0x00000000000005e0       0x40 /opt/pic32mx/lib/libc.a(buf.o)
 .pdr           0x0000000000000620       0xa0 /opt/pic32mx/lib/libc.a(sbrk.o)
 .pdr           0x00000000000006c0       0x20 /opt/pic32mx/lib/libc.a(write.o)
 .pdr           0x00000000000006e0       0x20 /opt/pic32mx/lib/libc.a(remove.o)
 .pdr           0x0000000000000700       0x20 /opt/pic32mx/lib/libc.a(close.o)
 .pdr           0x0000000000000720       0x20 /opt/pic32mx/lib/libc.a(memset.o)
 .pdr           0x0000000000000740       0x20 /opt/pic32mx/lib/libc.a(_mon_putc.o)

.reginfo        0x0000000000000000       0x18
 *(.reginfo)
 .reginfo       0x0000000000000000       0x18 main.o

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000      0x60b
 *(.comment)
 .comment       0x0000000000000000       0x4d main.o
 .comment       0x000000000000004d       0x4d rm-mr32.o
 .comment       0x000000000000009a       0x4d /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
 .comment       0x00000000000000e7       0x4d /opt/pic32mx/lib/libc.a(exit.o)
 .comment       0x0000000000000134       0x4d /opt/pic32mx/lib/libc.a(stdclean.o)
 .comment       0x0000000000000181       0x4d /opt/pic32mx/lib/libc.a(_exit.o)
 .comment       0x00000000000001ce       0x4d /opt/pic32mx/lib/libc.a(_iob.o)
 .comment       0x000000000000021b       0x4d /opt/pic32mx/lib/libc.a(fclose.o)
 .comment       0x0000000000000268       0x4d /opt/pic32mx/lib/libc.a(fflush.o)
 .comment       0x00000000000002b5       0x4d /opt/pic32mx/lib/libc.a(buf.o)
 .comment       0x0000000000000302       0x4d /opt/pic32mx/lib/libc.a(errno.o)
 .comment       0x000000000000034f       0x4d /opt/pic32mx/lib/libc.a(tfiles.o)
 .comment       0x000000000000039c       0x98 /opt/pic32mx/lib/libc.a(sbrk.o)
 .comment       0x0000000000000434       0x4d /opt/pic32mx/lib/libc.a(write.o)
 .comment       0x0000000000000481       0x4d /opt/pic32mx/lib/libc.a(remove.o)
 .comment       0x00000000000004ce       0x4d /opt/pic32mx/lib/libc.a(close.o)
 .comment       0x000000000000051b       0x56 /opt/pic32mx/lib/libc.a(memset.o)
 .comment       0x0000000000000571       0x4d /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .comment       0x00000000000005be       0x4d /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000      0x1e0
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 /opt/pic32mx/lib/libc.a(exit.o)
 .debug_aranges
                0x0000000000000028       0x28 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_aranges
                0x0000000000000050       0x28 /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_aranges
                0x0000000000000078       0x28 /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_aranges
                0x00000000000000a0       0x28 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_aranges
                0x00000000000000c8       0x30 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_aranges
                0x00000000000000f8       0x48 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_aranges
                0x0000000000000140       0x28 /opt/pic32mx/lib/libc.a(write.o)
 .debug_aranges
                0x0000000000000168       0x28 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_aranges
                0x0000000000000190       0x28 /opt/pic32mx/lib/libc.a(close.o)
 .debug_aranges
                0x00000000000001b8       0x28 /opt/pic32mx/lib/libc.a(_mon_putc.o)

.debug_pubnames
                0x0000000000000000      0x25b
 *(.debug_pubnames)
 .debug_pubnames
                0x0000000000000000       0x1b /opt/pic32mx/lib/libc.a(exit.o)
 .debug_pubnames
                0x000000000000001b       0x2e /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_pubnames
                0x0000000000000049       0x1c /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_pubnames
                0x0000000000000065       0x49 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_pubnames
                0x00000000000000ae       0x1d /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_pubnames
                0x00000000000000cb       0x1d /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_pubnames
                0x00000000000000e8       0x2c /opt/pic32mx/lib/libc.a(buf.o)
 .debug_pubnames
                0x0000000000000114       0x1c /opt/pic32mx/lib/libc.a(errno.o)
 .debug_pubnames
                0x0000000000000130       0x21 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_pubnames
                0x0000000000000151       0x74 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_pubnames
                0x00000000000001c5       0x1c /opt/pic32mx/lib/libc.a(write.o)
 .debug_pubnames
                0x00000000000001e1       0x1d /opt/pic32mx/lib/libc.a(remove.o)
 .debug_pubnames
                0x00000000000001fe       0x1c /opt/pic32mx/lib/libc.a(close.o)
 .debug_pubnames
                0x000000000000021a       0x20 /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_pubnames
                0x000000000000023a       0x21 /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_info     0x0000000000000000      0xdc0
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000       0x6a /opt/pic32mx/lib/libc.a(exit.o)
 .debug_info    0x000000000000006a      0x13f /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_info    0x00000000000001a9       0x4a /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_info    0x00000000000001f3      0x150 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_info    0x0000000000000343      0x162 /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_info    0x00000000000004a5       0xf1 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_info    0x0000000000000596      0x145 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_info    0x00000000000006db       0x3f /opt/pic32mx/lib/libc.a(errno.o)
 .debug_info    0x000000000000071a      0x127 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_info    0x0000000000000841      0x282 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_info    0x0000000000000ac3       0x7c /opt/pic32mx/lib/libc.a(write.o)
 .debug_info    0x0000000000000b3f       0xa9 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_info    0x0000000000000be8       0x9e /opt/pic32mx/lib/libc.a(close.o)
 .debug_info    0x0000000000000c86       0xfb /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_info    0x0000000000000d81       0x3f /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_abbrev   0x0000000000000000      0x861
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000       0x60 /opt/pic32mx/lib/libc.a(exit.o)
 .debug_abbrev  0x0000000000000060       0xbd /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_abbrev  0x000000000000011d       0x41 /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_abbrev  0x000000000000015e       0x81 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_abbrev  0x00000000000001df       0xcc /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_abbrev  0x00000000000002ab       0x80 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_abbrev  0x000000000000032b      0x109 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_abbrev  0x0000000000000434       0x30 /opt/pic32mx/lib/libc.a(errno.o)
 .debug_abbrev  0x0000000000000464       0x90 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_abbrev  0x00000000000004f4      0x153 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_abbrev  0x0000000000000647       0x73 /opt/pic32mx/lib/libc.a(write.o)
 .debug_abbrev  0x00000000000006ba       0x7f /opt/pic32mx/lib/libc.a(remove.o)
 .debug_abbrev  0x0000000000000739       0x6f /opt/pic32mx/lib/libc.a(close.o)
 .debug_abbrev  0x00000000000007a8       0x89 /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_abbrev  0x0000000000000831       0x30 /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_line     0x0000000000000000     0x1800
 *(.debug_line)
 .debug_line    0x0000000000000000      0x19d /opt/pic32mx/lib/libc.a(exit.o)
 .debug_line    0x000000000000019d      0x1b9 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_line    0x0000000000000356       0x9e /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_line    0x00000000000003f4      0x196 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_line    0x000000000000058a      0x1ec /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_line    0x0000000000000776      0x1e4 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_line    0x000000000000095a      0x258 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_line    0x0000000000000bb2      0x17c /opt/pic32mx/lib/libc.a(errno.o)
 .debug_line    0x0000000000000d2e      0x198 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_line    0x0000000000000ec6      0x3c3 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_line    0x0000000000001289       0xc2 /opt/pic32mx/lib/libc.a(write.o)
 .debug_line    0x000000000000134b      0x1aa /opt/pic32mx/lib/libc.a(remove.o)
 .debug_line    0x00000000000014f5      0x1a9 /opt/pic32mx/lib/libc.a(close.o)
 .debug_line    0x000000000000169e       0xd3 /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_line    0x0000000000001771       0x8f /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_frame    0x0000000000000000      0x230
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x2c /opt/pic32mx/lib/libc.a(exit.o)
 .debug_frame   0x000000000000002c       0x30 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_frame   0x000000000000005c       0x20 /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_frame   0x000000000000007c       0x30 /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_frame   0x00000000000000ac       0x2c /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_frame   0x00000000000000d8       0x38 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_frame   0x0000000000000110       0x8c /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_frame   0x000000000000019c       0x34 /opt/pic32mx/lib/libc.a(write.o)
 .debug_frame   0x00000000000001d0       0x20 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_frame   0x00000000000001f0       0x20 /opt/pic32mx/lib/libc.a(close.o)
 .debug_frame   0x0000000000000210       0x20 /opt/pic32mx/lib/libc.a(_mon_putc.o)

.debug_str      0x0000000000000000      0x9af
 *(.debug_str)
 .debug_str     0x0000000000000000       0xd6 /opt/pic32mx/lib/libc.a(exit.o)
                                         0xef (size before relaxing)
 .debug_str     0x00000000000000d6       0xd4 /opt/pic32mx/lib/libc.a(stdclean.o)
                                        0x157 (size before relaxing)
 .debug_str     0x00000000000001aa       0x74 /opt/pic32mx/lib/libc.a(_exit.o)
                                         0xc2 (size before relaxing)
 .debug_str     0x000000000000021e       0x89 /opt/pic32mx/lib/libc.a(_iob.o)
                                        0x14f (size before relaxing)
 .debug_str     0x00000000000002a7       0x8d /opt/pic32mx/lib/libc.a(fclose.o)
                                        0x14e (size before relaxing)
 .debug_str     0x0000000000000334       0x74 /opt/pic32mx/lib/libc.a(fflush.o)
                                        0x135 (size before relaxing)
 .debug_str     0x00000000000003a8       0xbc /opt/pic32mx/lib/libc.a(buf.o)
                                        0x152 (size before relaxing)
 .debug_str     0x0000000000000464       0x6c /opt/pic32mx/lib/libc.a(errno.o)
                                         0xb9 (size before relaxing)
 .debug_str     0x00000000000004d0       0x6d /opt/pic32mx/lib/libc.a(tfiles.o)
                                        0x147 (size before relaxing)
 .debug_str     0x000000000000053d      0x101 /opt/pic32mx/lib/libc.a(sbrk.o)
                                        0x19d (size before relaxing)
 .debug_str     0x000000000000063e       0x82 /opt/pic32mx/lib/libc.a(write.o)
                                         0xd6 (size before relaxing)
 .debug_str     0x00000000000006c0       0xdd /opt/pic32mx/lib/libc.a(remove.o)
                                        0x16e (size before relaxing)
 .debug_str     0x000000000000079d       0xc2 /opt/pic32mx/lib/libc.a(close.o)
                                        0x160 (size before relaxing)
 .debug_str     0x000000000000085f       0xe1 /opt/pic32mx/lib/libc.a(_mon_putc.o)
                                        0x13a (size before relaxing)
 .debug_str     0x0000000000000940       0x6f /opt/pic32mx/lib/libc.a(c32_uart.o)
                                         0xc1 (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo  0x0000000000000000    0x14835
 *(.debug_macinfo)
 .debug_macinfo
                0x0000000000000000      0xbb6 /opt/pic32mx/lib/libc.a(exit.o)
 .debug_macinfo
                0x0000000000000bb6     0x1e47 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_macinfo
                0x00000000000029fd      0x92f /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_macinfo
                0x000000000000332c     0x1e4e /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_macinfo
                0x000000000000517a     0x1e6a /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_macinfo
                0x0000000000006fe4     0x1e59 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_macinfo
                0x0000000000008e3d     0x23b5 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_macinfo
                0x000000000000b1f2      0xdbb /opt/pic32mx/lib/libc.a(errno.o)
 .debug_macinfo
                0x000000000000bfad     0x1e47 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_macinfo
                0x000000000000ddf4     0x1199 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_macinfo
                0x000000000000ef8d      0x92f /opt/pic32mx/lib/libc.a(write.o)
 .debug_macinfo
                0x000000000000f8bc     0x1e47 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_macinfo
                0x0000000000011703     0x1e47 /opt/pic32mx/lib/libc.a(close.o)
 .debug_macinfo
                0x000000000001354a      0x9bc /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_macinfo
                0x0000000000013f06      0x92f /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

/DISCARD/
 *(.note.GNU-stack)
OUTPUT(main.elf elf32-tradlittlemips)

.mdebug.abi32   0x000000009d0067dc        0x0

.rel.dyn        0x000000009d0067dc        0x0

.debug_ranges   0x000000009d0067dc       0x18
 .debug_ranges  0x000000009d0067dc       0x18 /opt/pic32mx/lib/libc.a(fclose.o)
